TÓPICO 201: PLANEJAMENTO DE CAPACIDADE=================================
=======================================================================
004. 201.1 Medir e Resolver Problemas de Uso de Recursos===============
==iostat vmstat e mpstat===============================================

O comando 'iostat' mostra as informações de I.O de armazenamento e de 
	CPU.
  -m exibe em Megabytes
  -c exibe somente o CPU
  -d exibe somente os devices
  -p exibe somente as partições

%user - tempo médio de uso da CPU a nível de usuário
%nice - aplicações a nível de usuário que foram definidas alguma prio
	ridade
%system - tempo gasto pelo sistema operacional
%iowait - tempo que a CPU ficou esperando procedimentos de I.O
%steal - tempo que a CPU da máquina virtual ficou aguardando a CPU
	real fornecer o recurso
%idle - tempo que a CPU ficou ociosa


O comando 'vmstat' mostra as estatísiticas da memória virtual
  
r - ready é o que está sendo executado ou que vai ser executado
b - estado "dormand" é um processo que está bloqueado/dormente,
  esperando para ser processado.
system in - interrupções do sistema
system cs - numero de troca de contexto
cpu us - tempo gasto executando código não kernel (tempo do usuário,
  incluíndo tempo de nice)
cpu sy - tempo gasto executando código de kernel (tempo do sistema)
cpu id - tempo ocioso, inclui tempo de espera de I/O
cpu wa - tempo gasto à espera de I/O
cpu st - tempo roubado de uma máquina virtual


005. 201.1 Medir e Resolver Problemas de Uso de Recursos===============
==sar==================================================================

O comando 'sar' vem junto com o pacote sysstat. No Debian para haibili_
  _tar a coleta de logs é necessário editarmos o arquivo e depois rodar
  os comandos:
    /etc/default/sysstat e trocar a variável ENABLE para "true"
    systemctl start sysstat.service
    systemctl enable systat.service

O sysstat coleta pois ele tem uma entrada adicionado na CRON pelas as 
  entradas 'sa1' e 'sadc'

O 'sadc' é o coletor de dados do sistema
O 'sa1' coleta e armazena dados binário da atividade do sistema

No Debian os logs ficam em: /var/log/sysstat
No CentOS os logs ficam em: /var/log/sa

Opções do comando 'sar':
  -f <'sa[numero do arquivo]'> permite ler os arquivos de dias anteriores
  -u mostra os dados de CPU
  -r mostra os dados de memória
  -S mostra dados referente a swap
  -n DEV mostra dados referente a interfaces de redes
  -d mostra a escrita em disco
  -B mostra dos dados de paginação de memória


006. 201.1 Medir e Resolver Problemas de Uso de Recursos===============
==netstat, ss iptraf===================================================

O comando 'netstat' mostra as conexões de redes, tabela de roteamento
  estatísiticas
  -i mostra todas as interfaces e as estatítiscas delas
  -s mostra as estatícias por protocolo
  -a mostra todos os sockets
  
O comando 'ss' é semelhante ao 'netstat'. O netstat pega as informações
  do /proc e o ss pega diretamente da memória do kernel
  -s mostra uma estatísitca resumida
  -l conexões em estado listen
  -t conexões TCP
  -n não resolve os IPs e números de porta, exibe apenas números

O comando 'iptraf' e 'iptraf-ng'  monitora o tráfego da interfaces de
  rede em tempo real


007. 201.1 Medir e Resolver Problemas de Uso de Recursos===============
==Processos============================================================
  
O comando 'ps' mostra as informações referentes aos processos
  VSZ - Virtual Memory Size - toda memória que o processo pode acessar
  RSS - Resident Set Size - toda memória que está alocada para esse 
    processo
  -ely mostra os processos que estão dormentes (possuem um D no inicio)


O comando 'pstree' mostra os processos em forma de arvore

O comando 'w' mostra quem está conectado na maquina e os processos que
  cada um está usando e os recurso consumidos

O comando 'lsof' identifica processos com arquivos, lista os arquivos
  abertos pelos processos
  -p <número do processo> lista os arquivos abertos pelo aquele 
    processo
  lsof <nome do arquivo> mostra quem criou aquele arquivo


008. 201.1 Medir e Resolver Problemas de Uso de Recursos===============
==top, htop e iotop====================================================

O comando 'top' exibe as informações dos processo rodando e o uso de
  recuros, exibe informações do último minuto, do últimos 5 min e dos 
  últimos 15 min
  
  Aperando Shift + f abrimos para escolher o fields, apertando "espaço"
  selecionamos para exibir e apertando "s" ordenamos por este campo

O comando 'htop' é uma melhoria do 'top'
  Aperando "l" lista os arquivos abertos pelo processo
  -p <PID> mostra somente os recursos consumidos pelos esses processo
  -d <numero> delay para exibição em divisores de 10, ex: 100 = 10 seg

O comando 'iotop' mostra os processo que estão fazendo I/O


008. 201.1 Medir e Resolver Problemas de Uso de Recursos===============
==Swap, uptime e free==================================================
  
O comando 'uptime' exibe a carga média dos últimos 1, 5 e 15 min
	e o tempo de uptime

O comando 'free' lista a quatidade de memória livre

  















+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
MUDAR


59. 101.1 Identificar e Configurar o Hardware==========================
== PCI, USB, /dev /sys /proc, sysfs====================================

PCI - Peripheral Component Interconnect
  'lspci'
  -s <identificador> -v permite visualizar maiores detalhes

USB - Universal Serial Bus
  'lsusb'
  -s <bus:device> -v permite visualizar maiores detalhes

#######
Partições virtuais

/proc - informações dos processo ativos e recursos de hardware
/sys - informações sobre dispositivos de hardware (sysfs)
        sysfs é o file system do sys
/dev - referencia aos dispositivos do sistema, inclusive de 
  armazenamento (udev). udev = device manager

dbus/hald = comunicação entre processos. Informa os processos a 
  situação dos dispositivos de hardware

O /proc contém informações do sistema
As informações sobre a CPU estão disponíveis em /proc/cpuinfo
As informações sobre a memória estão disponíveis em /proc/meminfo
As informações sobre o swap estão disponíveis em /proc/swaps
Os parâmetros que o bootloader lê estão em /proc/cmdline
Os tipos de filesystem que podem ser usado estão em /proc/filesystem
Os filesystem montados estão em /proc/mounts

O /sys contém informações sobre o hardware

O /dev tem as referencias a um dispositivo de hardware

61. 101.1 Identificar e Configurar o Hardware==========================
== udev================================================================

O udev identifica os dispositivos conectados e cria os mapeamentos para
esses dispositivos no sistema. As regras das ações tomadas estão em
/lib/udev/rules.d/ o usuario e administrador pode criar as regras e
/etc/udev/rules.d/
O udev utiliza um filesystem que fica em memória, do type=tmpfs


62. 101.1 Identificar e Configurar o Hardware==========================
== IDE, PATA, SATA, SCSI===============================================

PATA - Parallel Advanced Technology Attachment
  Mapeados como:
    /dev/hda ou sda - master
    /dev/hdb ou sdb - slave
    /dev/hdc ou sdc - master
    /dev/hdd ou sdd - slave

SATA - Serial Advanced Technology Attachment
  Mapeados como:
    /dev/sda - Primeiro disco
    /dev/sdb - Segundo disco
    /dev/sdc - Terceiro disco

SCSI - Small Computer System Interface


63. 101.1 Identificar e Configurar o Hardware==========================
== lsmod, modinfo, modprobe, insmod====================================

Os modulos dos dispositivos são equivalente aos drivers
Os modulos ficam em /lib/modules/ verificar qual o arqivo utilizado 
  pela kernel atual. Os arquivos .ko são os modulos

Podemos definir quais modulos que queremos que seja carregado em 
/etc/modules

O comando 'lsmod' lista os modulos carregados pelo Linux. O 'lsmod' lê
  as informações /proc/modules

O comando 'modinfo' mostra os detalhes de um modulo

O comando 'rmmod' remove o modulo dos modulos já carregados
Ex:
  'rmod <nome-do-modulo>'
  'rmod psmouse'

O comando 'insmod' carrega um modulo, mas não carrega as dependências
Ex:
  'insmod <caminho-do-modulo>'
  'insmod /lib/modules/4.8.0-46/kernel/drivers/input/psmouse.ko'

O comando 'modprob' carrega ou remove um modulo e carrega as 
  dependencias
Ex:
  'modprobe <nome-do-modulo>' para inserir um modulo
  'modprobe -r <nome-do-modulo>' para remove um modulo


64. 101.1 Identificar e Configurar o Hardware==========================
== modprobe============================================================

É possivel usar arquivos de configuração para determinar e configurar
algumas coisas /lib/modprob.d como adminstrador utilizamos o diretorio
/etc/modprob.d

O arquivo fbdev-blacklist.conf faz o modprob ingnorar um modulo, muita
  das vezes por conta de conflitos ou por outro problema


66. 101.2 O processo de Boot===========================================
== BIOS================================================================

A MBR está localizada no primeiro setor do disco bootável, contém as 
informações sobre o GRUB e o carrega

O Bootloader é gerenciado de boot, tem a função de carregar o sistema
  operacional na memória. Carrega também o initd/initramfs responsável
  por dar suporte ao kernel

O Init tem a função de iniciar os primeiros processos e serviços do 
  Linux. Possui ID 1. Possui RunLevels ou Targets que define diferentes
  modos de operação e o grupo de serviços que será iniciado

O comando 'dmesg' permite visualizar as infomações/log processadas
durante o boot. Também é possivel visualizar essas informações em
/var/log/mensage ou /var/log/dmesg


67. 101.2 O processo de Boot===========================================
== UEFI================================================================

UEFI - Unifed Extensible Firmware Interface

O UEFI não utiliza a MBR, ele obtem os bootloaders pelo ESP 
  (EFI system Partition) montada no diretório /boot/efi que utiliza um
  file system do tipo FAT
  Utiliza (preferencialmente) particoes GPT
  Implementa o Boot Seguro
  Possui modo de compatibilidade 
  Configuramos o UEFI Boot Manager pelo comando 'efibootmgr'


68. 101.2 O processo de Boot===========================================
== journalctl==========================================================

O comando 'journalctl' faz a coleta de logs e informações do sistema
  -b mostra os logs do boot atual
  -k mostra as mensagens do kernel do boot atual


70. 101.3 Alterar os RunLevels, Shutdown e Reboot======================
== SysV/init===========================================================

O sysV trabalha com RunLevels que é o nivel de execução do sistema e 
cada RunLevel carrega um conjunto de programas, scritps e serviços
O arquivo de configuração principal fica em /etc/inittab
Os scripts em /etc/init.d/ e /etc/rd.d/

Os RunLevels
  ID            Descrição
  0             Desligamento
  1,s,S         Single user / Mode de recuperação
  2             Multi usuário (sem rede)
  3             Multi usuário (com rede)
  4             Multi usuário (definido pelo usuário)
  5             Multi usuário (com rede e gráfico)
  6             Reinicialização

O comando 'runlevel' mostra o runlevel em que estamos
O comando 'init <ID-runlevel>' ou 'telinit' altera o runlevel
O comando 'telinit' é semelhante ao init
  q Q recarrega as configurações do daemon do init
  u U reexecutar o daemon do init

Para iniciar um processo fazemos
  '/etc/init.d/<processo> start'

72. 101.3 Alterar os RunLevels, Shutdown e Reboot======================
== systemd=============================================================

O systemd é melhor que o init. Utiliza o conceito de Units.

A unit = nome.tipo (ex: httpd.service)

Tipos de serviços: service, socket, device, mount, automount, snapchat
  target (equivalente aos runlevels)

O diretorio principal de configuração fica em /lib/systemd/system
  o target.default aponta para qual target será utilizado
  Outro diretório é o /etc/systemd/system

O principal comando é o 'systemctl'
  list-units exibe todas as unidades
  setdefault <nome-do-target> altera o target default
  is-enable verifica se está ativo

Mudando de target no systemd
  'systemctl isolate <nome-do-target>'
             default inicia o target default

73. 101.3 Alterar os RunLevels, Shutdown e Reboot======================
== upstart=============================================================

O upstart é um geranciador de serviço que mantem a compatibilidade com
o init. As configuração ficam /etc/init
Principais comandos:
  'initctl'
  

74. 101.3 Alterar os RunLevels, Shutdown e Reboot======================
== shutdown, reboot, poweroff==========================================

Quando damos o comando 'shutdown' os processos recebem dois sinais:
  SIGTERM e SIGKILL. O shutdown permite programar o desligamento
  -c para cancelar um comando de shutdown
  -r o sistema será reiniciado
  -h halt desliga o linux mas não desliga a maquina
  +10 agenda para daqui 10min
  18:00 programa o desliamento para as 18hs

Os comando 'reboot', 'poweroff' e 'halt' são semelhantes ao 'shutdown'

O comando 'wall' é utilizado para mandar uma mensagem para todos os 
  usarios do sistema

75. 101.3 Alterar os RunLevels, Shutdown e Reboot======================
== acpi================================================================

ACPI - Advanced Configuration and Power Interface

Trata de itens referentes ao genrenciamento de eneriga do hardware
O processo acpid monitora os eventos relacionados ao gerenciamento de
  energia da máquina

O comando 'acpi' mostra informações relacionados a energia
