TÓPICO 203: Sistema de arquivos & dispositivos=========================
=======================================================================
044. 203.1 Operando o Sistema de Arquivos Linux========================
==fstab================================================================

O arquivo de configuração do fstab ficam em "/etc/fstab"

Contém os campos: 
Identificação do Device (UUID) | Ponto de montagem | Tipo de particacao
	| Opções | Dump | Pass
	
Dump é usado para a backup, não mais utilizado
Pass se essa partição será sempre verificado pelo fsck

FILESYSTEM-INDEPENDENT MOUNT OPTIONS
	async - grava de forma assincrona no disco, gravando antes em um 
		cache
	sync - grava de forma direta no disco
	auto - o diretorio será montado no boot do sistema
	noauto - o diretorio não será montado no boot do sistema
	defaults - inclui as opções: rw, suid, dev, exec, auto, nouser e
		async
	dev - vão ser interpretados os caractes ou blocos especiais do /dev
	exec - permite a execução de binários
	no exec - não permite a execução de binários
	group - permite que um usuário normal faça a montagem do file system
		se esse usuário for parte do grupo de usuário daquele que montou
	suid - permissões expeciais
	owner - permite que um usuário comum monte o file system se ele for
		o dono da partição
	remount - remonta a partição 
	ro - read only
	rw - read write
	user - permite que qualquer usuário possa montar o file system
		mas só quem montou pode desmontar
	users - qualquer usuário pode montar ou desmontar a particao
	no user - somente o root pode montar ou desmontar a partição
	

045. 203.1 Operando o Sistema de Arquivos Linux========================
==Comandos úteis=======================================================

O comando 'mount' exibe as partições montadas
	-a monta tudo que está com auto no fstab
	-t expecifica o tipo de particionamento ext4, ntfs
	-o expecifica as opções de montagem da partição
	-U permite expecificar o UUID de um disco, ou UUID=
	LABEL=label da partição
	
O comando 'blkid' trás o UUID de todas as partições

O comando 'lsblk' trás as informações dos dispositivos e as partições
	-f inclui o UUID e LABEL
	
O comando 'e2label <particao>' mostra o label da partição

O comando 'findfs <UUID / LABEL>' mostra a partição relacionada a esse	
	UUID ou LABEL

O comando 'findmnt' lista os pontos de montagem do sistema

O comando 'sync' sicroniza o que está em cache e grava no disco


046. 203.1 Operando o Sistema de Arquivos Linux========================
==Swap=================================================================

Podemos associar partições ou arquivos para ser usado como área de swap

'mkswap <particao>' formata a partição com o tipo swap

'swapon <particao>' inclui na área de swap

Configuramos também a partição swap no fstab
/dev/sdb2	swap	swap	defaults	0 	0

Podemos usar um arquivo para swap:
Usamos o comando 'dd if=/dev/zero of=/arquivoswap bs=1024k count=1000'

Formatamos com o 'mkswap' e modificamos a permissão para 'chmod 600'
E incluimos o arquivo usando o 'swapon'
Configuramos também no fstab

Ao usar um arquivo, podemos redmensiona-lo posteriormente


047. 203.1 Operando o Sistema de Arquivos Linux========================
==Systemd mount========================================================

Criamos uma Unit do tipo mount no diretório '/etc/systemd/system. ex:
	opt-montagem.mount
	No arquivo:
		[Unit]
		Description=Ponto de Montagem Teste
		
		[Mount]
		What=/dev/sdb1
		Where=/opt/montagem
		Type=ext4
		Options=defaults
		
		[Install]
		WantedBy=multi-user.target
		
	Rodamos o comando 'systemctl daemon reload'
	Depois rodamos 'systemctl start opt-montagem.mount'
	
	
049. 203.2 Manutenção de um Sistema de Arquivos Linux==================
==Comandos=============================================================

O comando 'mkfs' permite formatar uma partição
	-t <tipo de particionamento> ou mkfs.<tipo de particionamento>
	-c checa deadblocks antes de formatar
	
	
O comando 'mke2fs' é para o tipo ext'sdb1

O file system define as regras e os padrões que os dados vão ser gra_
	dos em disco
	

O comando 'dump2fs' exibe informações sobre um filesystem
	-h mostra as informações de uma partição
	-f tras informações dos grupos de blocos 
	-b mostra os badblocks
	
O comando 'tune2fs' permite customizar o filesystem
	-l lista as configurações 
	-L para definir um LABEL
	-c define o numero de montagens antes de fazer um checagem
	-m<valor> altera a porcentagem de fundo de reserva de blocos
	
O comando 'debugfs' consegue fazer alterações de baixo nivel em uma
	partição e para recuperar arquivos quando a partição é do tipo 
	ext2 (pouco usado)

O comando 'badblocks' permite checar os badblocks das partições

050. 203.2 Manutenção de um Sistema de Arquivos Linux==================
==fsck=================================================================

O comando 'fsck' é usado para checar e reparar o file system linux
	somnente é possivel usar em partições desmontadas
	-f force
	-y yes para todas as perguntas
	-n no para todas as perguntas
	-c checa por badblocks e por estrutura de arquivos
	-p corrige sem perguntar

Podemos especificar apenas a partição
	ex: 'fsck /dev/sdb3'

Especificar o tipo de file system
	ex: 'fsck -t ext3 /dev/sdb3'
	
Usar o fsck especifico do file system
	ex: 'fsck.ext3 /dev/sdb3'
	

051. 203.2 Manutenção de um Sistema de Arquivos Linux==================
==btrfs================================================================

BTRFS - B-tree file system

Filesystem Moderno
Foco em tolerância a falhas e facilidade de administração e reparo
Desenvolvido por um grupo de empresas Oracle, RedHat, Fujitsu, Intel,
	SUSE, Facebook.
	
Recuros:
	Suporte a RAID 0,1 e 10 (5 e 6 em desenvolvimento)
	SubVolumes
	Snapshots
	Compressão direto do FS (zlib, LZO)
	Conversão de ext3/4 para btrfs
	
Podemos verificar se o sistema suporta o btrfs usando o comando
	'cat /proc/filesystems'
	
Para habilitar usamos
	'modeprobe btrfs'
	
Para instalar o btrfs 'btrfs-tools'

O comando 'btrfs filesystem show' exibe as partições que usam btrfs

Os subvolumes podem ser criados usando  o comando
	'btrfs subvolume create <caminho>'

Visualizamos os subvolumes com o comando
	'btrfs subvolume list /mnt/btrfs1/'
	
Podemos montar um subvolume dentro de um diretório
	ex: 'mount -o subvol=Sub1 /dev/sdb5 /mnt/SubVolume1/'
	Estamos montando o Subvloume "Sub" dentro do volume /dev/sdb5 no 
		diretório /mnt/SubVolume1/
	Com isso podemos fazer montagens expecificas de volumes para
		cada diretório.
		
Criando um snapshot:
	'btrfs subvolume snapshot /mnt/SubVolume1/ /mnt/SubVolume1/Snap1'
	
Criando RAID no BTRFS
	'mkfs.btrfs -d raid1 /dev/sdb5 /dev/sdb6'
	ao montar o sdb5 o sdb6 será também montado
	
	
Convertendo um outro filesystem para BTRFS
	'btrfs-convert /dev/sdb3'
	
	
052. 203.2 Manutenção de um Sistema de Arquivos Linux==================
==xfs e zfs============================================================

ZFS - Criado pela SUN para o Solaris, hoje mantido pela Oracle.
Existe o OpenZFS que é uma alternativa de código aberto.
Foca na integridade dos Dados, na facilidade de Gerenciamento.
Sistema de Arquivos em Pools / Escalabilidade, RAID.


XFS - Desenvolvido pela Silicon Graphics para IRIX
Robusto e escalável
Trabalha bem com arquivos grandes
Redimensionamento/Desfragmentação Online
Tamanho de Blocos Variáveis
Temos que insala-lo: xfsprogs xfsdump

O comando 'xfs_info' mostra os detalhes das particções xfs

O comando 'xfs_repair' verifica e repara as partições xfs

O comando 'xfsdump' usado para criar um backup incremental
O comando 'xfsrestore' restaura um backup


053. 203.2 Manutenção de um Sistema de Arquivos Linux==================
==smart================================================================

O smart é um daemon que roda no sistema para verificar o disco e 
	a saude do disco e exibir relatórios informativos sobre.
	
O smartd é o daemon
O smartctl é o cliente

Instalamos o pacote 'smartmontools'

O comando 'smartctl -i <disco>' trás informações sobre o disco
	-a trás uma longa lista de detalhes
	-H faz o teste de saúde
	
055. 203.3 Criando e Config. Opções dos Sistemas de Arquivos===========
==Montagem Automatica==================================================

O Auto FS permite montar automaticamente um diretório. Necessário fazer
	a instalação do pacote autofs.
	
O processo automount pertence ao Autofs
O arquivo de configuração fica em /etc/auto.master 
	(chamado de master map)
	
No arquivo de configuração colocamos qual o diretório será monitorado, 
	e depois qual arquivo que terá os detalhes dessa montagem, e, 
	depois as opções
	Ex: /mnt/autofs		/etc/auto.paulo		--timeout 15

No arquivo com os detalhes colocamos o nome diretorio que será montado 
	automaticamente. Depois as opções (as mesmas do mount). Em seguida
	qual a partição será montada.
	Ex: paulo -fstype=nfs	:/dev/sdb1
		paulo -fstype=nfs	10.0.0.55:/dev/sdb1
		
Necessário criar o diretorio autofs dentro de /mnt/autofs

########
Auto mount usando o Systemd

Precisamos criar duas unidades, uma de mount e outra de automount
No diretório /etc/systemd/system, criamos:
	'vim mnt-automount.mount'
	
	[Unit]
	Description=Teste de Montagem Automatica
	
	[Mount]
	What=/dev/sdb2
	Where=/mnt/automount
	
	[Install]
	WantedBy=multi-user.target
	
	
	'vim mnt-automount.automount'
	
	[Unit]
	Description=Auto Montagem
	
	[Automount]
	Where=/mnt/automount
	
	[Install]
	WantedBy=multi-user.target

	
	Reiniciamos o deemon 'systemctl daemon-reload'
	

056. 203.3 Criando e Config. Opções dos Sistemas de Arquivos===========
==Imagem para CD DVD===================================================

Devemos instalar os pacotes 'wodim', 'genisoimage' e 'udftools'

Para criar um arquivo de imagem baseado no CDROM fazemos:
	'dd if=/dev/sr0 of=imagem-cd.iso'
	
Para gravar o CD fazemos:
	'cdrecord dev=/dev/sr0 imagem-cd.iso'
	
Como criar uma imagem de CD baseado em arquivos do computador:
	'mkisofs -o imagem.iso /home/paulo'
	
Para a incluir mais de um diretório usamos a opção -graft-points
	'mkisofs -o imagem3.iso -graft-points dir1=/home/paulo 
		dir2=/etc/yum.repos.d/'
		
Ao usarmos o 'mkisofs' nos deparamos com as limitações da ISO9660
	em que os arquivos usam o padrão de nome 8.3 e não é copiado 
	os links simbolicos e as permisões dos arquivos.
	Existem diversas extensões para o ISO9660, uma delas é joliet
	que permite usar nomes longos e com acentos. -J
	Outra extesão é o Rock Ridge permite usar nomes longos, manter
	as permissões e usar links simbolicos. -R
	Existe a extensão El Torito usada para criar CD bootável
	A opção -hfs cria CDs que podem ser lidos pelo windows e pelo 
	MAC OS.
	Exite o padrão -udf, um novo formato para CD e DVDs


057. 203.3 Criando e Config. Opções dos Sistemas de Arquivos===========
==Criptografia=========================================================

Usamos o pacote 'cryptsetup'

Para criptograr é necessário que a partição esteja vazia, caso já haja
	dados eles serão perdidos.
	
Para criar uma partição criptografada fazemos:
	'cryptsetup -v --verify-passphrase luksFormat <partição>'
	
Podemos verificar se partição foi criptografada usando o comando 
	'lsblk -f' a partição aparecerá com o tipo crypto_LUKS
	
Temos que ativar a partição criptografada com:
	'cryptsetup luksOpen'
	'cryptsetup open --type luks <particao> <novo nome da particao>'
	
Após temos que formatar a partição
	'mkfs.ext4  /dev/mapper/part-segura'
	
Podemos consultar o status com o comando:
	'cryptsetup status part-segura'
	
Depois montamos a partição.

Fechamos a partição com: 'crypsetup close part-segura'

######
Para montar automaticamente temos que:

Configuramos no arquivo '/etc/crypttab'
Ex: <nome da particao>	<device>  <aquivo com a senha> <tipo de crypto>
	part-segura			/dev/sdb2  none					luks
	
Configuramos também no fstab

Se utilizado um arquivo com as senhas devemos usar o comando
	'cryptsetup luksAddKey /dev/sdb2 /senha'
	
